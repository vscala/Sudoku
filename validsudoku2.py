def isValidSudoku(board):
    seen = [[0 for i in range(9)] for j in range(3)]

    for i in range(81):
        cur = board[i//9][i%9]
        if cur == ".": continue
        cur = 1 << (int(cur)-1)
        if cur & seen[0][i//9]: return False
        seen[0][i//9] |= (cur)
        if cur & seen[1][i%9]: return False
        seen[1][i%9] |= (cur)
        if cur & seen[2][(i%9)//3 + (i//27)*3]: return False
        seen[2][(i%9)//3 + (i//27)*3] |= (cur)
    return True

if __name__ == "__main__":
    board = \
        [["5","3",".",".","7",".",".",".","."]
        ,["6",".",".","1","9","5",".",".","."]
        ,[".","4","8",".",".",".",".","6","."]
        ,["8",".",".",".","6",".",".",".","3"]
        ,["4",".",".","8",".","3",".",".","1"]
        ,["7",".",".",".","2",".",".",".","6"]
        ,[".","6",".",".",".",".","2","8","."]
        ,[".",".",".","4","1","9",".",".","5"]
        ,[".",".",".",".","8",".",".","7","9"]]
    board2 = \
        [["8","3",".",".","7",".",".",".","."]
        ,["6",".",".","1","9","5",".",".","."]
        ,[".","9","8",".",".",".",".","6","."]
        ,["8",".",".",".","6",".",".",".","3"]
        ,["4",".",".","8",".","3",".",".","1"]
        ,["7",".",".",".","2",".",".",".","6"]
        ,[".","6",".",".",".",".","2","8","."]
        ,[".",".",".","4","1","9",".",".","5"]
        ,[".",".",".",".","8",".",".","7","9"]]
    board3 = \
        [[".",".","4",".",".",".","6","3","."]
        ,[".",".",".",".",".",".",".",".","."]
        ,["5",".",".",".",".",".",".","9","."]
        ,[".",".",".","5","6",".",".",".","."]
        ,["4",".","3",".",".",".",".",".","1"]
        ,[".",".",".","7",".",".",".",".","."]
        ,[".",".",".","5",".",".",".",".","."]
        ,[".",".",".",".",".",".",".",".","."]
        ,[".",".",".",".",".",".",".",".","."]]
    assert isValidSudoku(board) == True
    assert isValidSudoku(board2) == False
    assert isValidSudoku(board3) == False
    print("Tests passed 3/3")

